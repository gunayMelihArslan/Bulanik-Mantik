<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        B/8=
</value>
  </data>
</root>